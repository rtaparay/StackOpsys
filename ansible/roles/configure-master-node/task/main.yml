---
- name: Installing and Configuring Kubernetes Cluster For Master Nodes
  hosts: k8s_master
  gather_facts: true
  become: true

  tasks:
      # Configuracion Kubernetes
    - name: Configuring Kubernetes Cluster for Ubuntu
      shell: |
        sudo kubeadm init --control-plane-endpoint "api.kubernetes.{{ ansible_host }}.sslip.io:6443" \
          --apiserver-advertise-address="{{ ansible_host }}" \
          --apiserver-cert-extra-sans="{{ ansible_host }}" \
          --pod-network-cidr=10.244.0.0/16 \
          --service-cidr=10.96.0.0/12 \
          --upload-certs \
          --node-name "cluster-kubeadm-k8s-master-01" \
          --ignore-preflight-errors=all -v=9 > /tmp/kube.outs
      when: ansible_facts['os_family'] == "Debian"
      tags: "1"

    - name: Create .kube directory
      file:
        path: ".kube"
        state: directory
        mode: '0755'
      tags: "2"

    - name: Copy configuracion de kube.outs 
      command: sudo cp -f /tmp/kube.outs /home/{{ ansible_user }}/config-k8s-homelab.txt
      tags: "3"

    - name: Copy admin.conf to .kube/config
      command: sudo cp /etc/kubernetes/admin.conf  /home/{{ ansible_user }}/.kube/config
      tags: "4"

    - name: Change ownership of .kube/config
      command: chown {{ ansible_user }}:{{ ansible_user }} /home/{{ ansible_user }}/.kube/config
      tags: "5"

    - name: Install Calico
      become: false
      shell: |
        export KUBECONFIG=/etc/kubernetes/admin.conf
        kubectl create -f https://raw.githubusercontent.com/projectcalico/calico/v3.30.3/manifests/operator-crds.yaml
        kubectl create -f https://raw.githubusercontent.com/projectcalico/calico/v3.30.3/manifests/tigera-operator.yaml
      when: ansible_facts['os_family'] == "Debian"
      tags: "6"

    - name: Wait for Kubernetes API to be ready
      uri:
        url: "https://api.kubernetes.{{ ansible_host }}.sslip.io:6443/healthz"
        method: GET
        validate_certs: no
      register: k8s_api_status
      until: k8s_api_status.status == 200
      retries: 30
      delay: 10
      tags: "6.1"

    - name: Verify cluster is ready
      become: false
      shell: |
        export KUBECONFIG=/etc/kubernetes/admin.conf
        kubectl get nodes
      register: cluster_status
      failed_when: cluster_status.rc != 0
      tags: "6.2"

    - name: Generate API token for Kubernetes worker nodes to join K8S master
      shell: |
        export KUBECONFIG=/etc/kubernetes/admin.conf
        kubeadm token create --print-join-command > /etc/kubernetes/joincluster.sh
      register: token_creation
      failed_when: token_creation.rc != 0
      tags: "7"

# Copiar  joincluster hacia localhost y enviar a worker
- hosts: k8s_master
  tasks:
    - name: Fetch API Token From K8S Master To Ansible Controller
      fetch:
        src: /etc/kubernetes/joincluster.sh
        dest: /tmp/
        flat: yes
      tags: "8"

- hosts: k8s_worker
  tasks:
    - name: Copy API Token From Ansible Controller To K8S Worker Nodes
      copy:
        src: /tmp/joincluster.sh
        dest: /tmp/
      tags: "9"

- hosts: localhost
  become: true
  tasks:
    - name: Remove API Token From Ansible Controller
      file:
        path: /tmp/joincluster.sh
        state: absent
      tags: "10"

    - debug:
        msg: Control Plane is Ready..!! Please Run the Worker Setup Playbook
      tags: "11"
